{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\ESSPI-WEBSITE\\\\ESSPI---WEBSITE\\\\client\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport './Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = ({\n  setAuth\n}) => {\n  _s();\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\"\n  });\n  const {\n    email,\n    password,\n    name\n  } = inputs;\n  const onChange = e => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value\n    });\n  };\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = {\n        email,\n        password,\n        name\n      };\n      const response = await fetch(\"http://localhost:5000/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n      if (parseRes.jwtToken) {\n        localStorage.setItem(\"token\", parseRes.jwtToken);\n        setAuth(true);\n        toast.success(\"Registered Successfully\");\n      } else {\n        setAuth(false);\n        toast.error(parseRes);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center my-5\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmitForm,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"email\",\n            className: \"form-control my-3\",\n            value: email,\n            onChange: e => onChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"password\",\n            className: \"form-control my-3\",\n            value: password,\n            onChange: e => onChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"name\",\n            className: \"form-control my-3\",\n            value: name,\n            onChange: e => onChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success btn-block\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"link\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"qjE85mR8I5xmuFmU10rvuiVljjo=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Fragment","useState","Link","toast","jsxDEV","_jsxDEV","Register","setAuth","_s","inputs","setInputs","email","password","name","onChange","e","target","value","onSubmitForm","preventDefault","body","response","fetch","method","headers","JSON","stringify","parseRes","json","jwtToken","localStorage","setItem","success","error","err","console","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","to","_c","$RefreshReg$"],"sources":["C:/Users/user/ESSPI-WEBSITE/ESSPI---WEBSITE/client/src/components/Register.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport './Register.css'\r\n\r\n\r\nconst Register = ({setAuth}) => {\r\n\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\"\r\n  });\r\n\r\n  const {email, password, name} = inputs;\r\n\r\n  const onChange = (e) => {\r\n    setInputs({...inputs, [e.target.name] : e.target.value });\r\n  };\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      const body = { email, password, name };\r\n  \r\n      const response = await fetch(\"http://localhost:5000/auth/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n  \r\n      const parseRes = await response.json();\r\n  \r\n      if (parseRes.jwtToken) {\r\n        localStorage.setItem(\"token\", parseRes.jwtToken); \r\n        setAuth(true);\r\n        toast.success(\"Registered Successfully\");\r\n      } else {\r\n        setAuth(false);\r\n        toast.error(parseRes);\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"register-wrapper\">  \r\n        <div className=\"register-container\"> \r\n          <h1 className=\"text-center my-5\">Register</h1> \r\n          <form onSubmit ={onSubmitForm}>\r\n            <input type=\"email\" name=\"email\" placeholder=\"email\" className=\"form-control my-3\" value={email} onChange = { e => onChange(e)}></input>\r\n            <input type=\"password\" name=\"password\" placeholder=\"password\" className=\"form-control my-3\" value={password} onChange = { e => onChange(e)}></input>\r\n            <input type=\"text\" name=\"name\" placeholder=\"name\" className=\"form-control my-3\" value={name} onChange = { e => onChange(e)}></input>\r\n            <button className=\"btn btn-success btn-block\">Submit</button>\r\n          </form>\r\n          <Link to=\"/login\" className=\"link\">Login</Link>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}